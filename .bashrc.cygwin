# base-files version 4.0-4
# ~/.bashrc: executed by bash(1) for interactive shells.

# The latest version as installed by the Cygwin Setup program can
# always be found at /etc/defaults/etc/skel/.bashrc

# Modifying /etc/skel/.bashrc directly will prevent
# setup from updating it.

# The copy in your home directory (~/.bashrc) is yours, please
# feel free to customise it to create a shell
# environment to your liking.  If you feel a change
# would be benificial to all, please feel free to send
# a patch to the cygwin mailing list.

# User dependent .bashrc file

# If not running interactively, don't do anything
[[ "$-" != *i* ]] && return

# Shell Options
#
# See man bash for more options...
#
# Don't wait for job termination notification
# set -o notify
#

git_completion_path='/home/jinnouchi.yasushi/bin/git-completion.bash'

if [ -f $git_completion_path ]; then
    . $git_completion_path
    # unstated (*) stated (+)
    #export GIT_PS1_SHOWDIRTYSTATE=1
    # stashed ($)
    #export GIT_PS1_SHOWSTASHSTATE=1
    # untracked (%)
    #export GIT_PS1_SHOWUNTRACKEDFILES=1
    # upstream (<=>)
    #export GIT_PS1_SHOWUPSTREAM="verbose"
    PS1='\e[1;36m$(__git_ps1 "[%s] ")\e[1;32m[\u@\h \w]\e[m \e[1;34m\D{%x %p%l:%M}\e[m\n\$ '
else
    PS1='\e[1;32m[\u@\h \w] \e[1;34m\D{%x %p%l:%M}\e[m\n\$ '
fi

alias ls='ls -F --color'
alias ll='ls -F -l'
alias l.='ls -F -d .*'

for i in autocd cdable_vars cdspell checkwinsize cmdhist dirspell expand_aliases extglob extquote force_fignore globstar hostcomplete interactive_comments progcomp promptvars sourcepath
do
	shopt -s $i
done

export PATH=~/bin:/usr/local/bin:/usr/bin:$PATH
source ~/perl5/perlbrew/etc/bashrc
[[ -s $HOME/.pythonz/etc/bashrc ]] && source $HOME/.pythonz/etc/bashrc

# powerline

_powerline_tmux_setenv() {
	if [[ -n "$TMUX" ]]; then
		tmux setenv TMUX_"$1"_$(tmux display -p "#D" | tr -d %) "$2"
	fi
}

_powerline_tmux_set_pwd() {
	_powerline_tmux_setenv PWD "$PWD"
}

_powerline_tmux_set_columns() {
	_powerline_tmux_setenv COLUMNS "$COLUMNS"
}

_powerline_prompt() {
	[[ -z "$POWERLINE_OLD_PROMPT_COMMAND" ]] ||
		eval $POWERLINE_OLD_PROMPT_COMMAND
	PS1="$(powerline-client.py shell left -r bash_prompt --last_exit_code=$?)"
	_powerline_tmux_set_pwd
}

trap "_powerline_tmux_set_columns" SIGWINCH
_powerline_tmux_set_columns

[[ "$PROMPT_COMMAND" == "_powerline_prompt" ]] ||
	POWERLINE_OLD_PROMPT_COMMAND="$PROMPT_COMMAND"
export PROMPT_COMMAND="_powerline_prompt"
