diff -ur git-core.orig/git-pull git-core/git-pull
--- git-core.orig/git-pull	2015-09-24 23:33:47.000000000 +0900
+++ git-core/git-pull	2015-09-24 23:34:58.000000000 +0900
@@ -4,6 +4,21 @@
 #
 # Fetch one or more remote refs and merge it/them into the current HEAD.
 
+abs_dirname() {
+  local cwd="$(pwd)"
+  local path="$1"
+
+  while [ -n "$path" ]; do
+    cd "${path%/*}"
+    local name="${path##*/}"
+    path="$(readlink "$name" || true)"
+  done
+
+  pwd -P
+  cd "$cwd"
+}
+__SCRIPT_DIR__=$(abs_dirname $0)
+
 SUBDIRECTORY_OK=Yes
 OPTIONS_KEEPDASHDASH=
 OPTIONS_STUCKLONG=Yes
@@ -48,8 +63,8 @@
 refmap=refmap              specify fetch refmap
 "
 test $# -gt 0 && args="$*"
-. git-sh-setup
-. git-sh-i18n
+. $__SCRIPT_DIR__/git-sh-setup
+. $__SCRIPT_DIR__/git-sh-i18n
 set_reflog_action "pull${args+ $args}"
 require_work_tree_exists
 cd_to_toplevel
@@ -266,7 +281,7 @@
 		echo "a branch. Because this is not the default configured remote"
 		echo "for your current branch, you must specify a branch on the command line."
 	elif [ -z "$curr_branch" -o -z "$upstream" ]; then
-		. git-parse-remote
+		. $__SCRIPT_DIR__/git-parse-remote
 		error_on_missing_default_upstream "pull" $op_type $op_prep \
 			"git pull <remote> <branch>"
 	else
@@ -289,7 +304,7 @@
 	fi
 	oldremoteref= &&
 	test -n "$curr_branch" &&
-	. git-parse-remote &&
+	. $__SCRIPT_DIR__/git-parse-remote &&
 	remoteref="$(get_remote_merge_branch "$@" 2>/dev/null)" &&
 	oldremoteref=$(git merge-base --fork-point "$remoteref" $curr_branch 2>/dev/null)
 }
@@ -367,12 +382,12 @@
 
 case "$rebase" in
 true)
-	eval="git-rebase $diffstat $strategy_args $merge_args $rebase_args $verbosity"
+	eval="$__SCRIPT_DIR__/git-rebase $diffstat $strategy_args $merge_args $rebase_args $verbosity"
 	eval="$eval $gpg_sign_args"
 	eval="$eval --onto $merge_head ${oldremoteref:-$merge_head}"
 	;;
 *)
-	eval="git-merge $diffstat $no_commit $verify_signatures $edit $squash $no_ff $ff_only"
+	eval="$__SCRIPT_DIR__/git-merge $diffstat $no_commit $verify_signatures $edit $squash $no_ff $ff_only"
 	eval="$eval $log_arg $strategy_args $merge_args $verbosity $progress"
 	eval="$eval $gpg_sign_args"
 	eval="$eval FETCH_HEAD"
diff -ur git-core.orig/git-rebase git-core/git-rebase
--- git-core.orig/git-rebase	2015-04-08 16:56:29.000000000 +0900
+++ git-core/git-rebase	2015-04-08 17:18:44.000000000 +0900
@@ -3,6 +3,21 @@
 # Copyright (c) 2005 Junio C Hamano.
 #
 
+abs_dirname() {
+  local cwd="$(pwd)"
+  local path="$1"
+
+  while [ -n "$path" ]; do
+    cd "${path%/*}"
+    local name="${path##*/}"
+    path="$(readlink "$name" || true)"
+  done
+
+  pwd -P
+  cd "$cwd"
+}
+__SCRIPT_DIR__=$(abs_dirname $0)
+
 SUBDIRECTORY_OK=Yes
 OPTIONS_KEEPDASHDASH=
 OPTIONS_STUCKLONG=t
@@ -44,8 +59,8 @@
 skip!              skip current patch and continue
 edit-todo!         edit the todo list during an interactive rebase
 "
-. git-sh-setup
-. git-sh-i18n
+. $__SCRIPT_DIR__/git-sh-setup
+. $__SCRIPT_DIR__/git-sh-i18n
 set_reflog_action rebase
 require_work_tree_exists
 cd_to_toplevel
@@ -186,7 +201,7 @@
 		export GIT_EDITOR
 		autosquash=
 	fi
-	. git-rebase--$type
+	. $__SCRIPT_DIR__/git-rebase--$type
 	ret=$?
 	if test $ret -eq 0
 	then
@@ -446,7 +461,7 @@
 		if ! upstream_name=$(git rev-parse --symbolic-full-name \
 			--verify -q @{upstream} 2>/dev/null)
 		then
-			. git-parse-remote
+			. $__SCRIPT_DIR__/git-parse-remote
 			error_on_missing_default_upstream "rebase" "rebase" \
 				"against" "git rebase <branch>"
 		fi
