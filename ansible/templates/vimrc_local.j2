function! s:SetGithubIssuesVariables()
  let g:github_same_window     = 1
  let g:gissues_lazy_load      = 1
  let g:gissues_async_omni     = 1
  let g:github_upstream_issues = 1
  if match(getcwd(), '{{ secret_office.repo_paths[0] }}') > -1 || match(getcwd(), '{{ secret_office.repo_paths[1] }}') > -1
    let g:github_access_token     = '{{ secret_office.github_token.gissues }}'
    let g:github_api_url          = '{{ secret_office.github_api_path }}'
    let g:github_issues_urls      = ['{{ secret_office.github_issues_urls | join("', '") }}']
  else
    let g:github_access_token = '{{ secret_github_gissues_token }}'
    let g:github_api_url      = 'https://api.github.com/'
    let g:github_issues_urls  = ['github.com:', 'github.com/']
  endif
endfunction

if index(['{{ secret_office.hostnames | join("', '") }}'], hostname()) > -1
  let g:gista#client#default_username = '{{ secret_office.github_user }}'
  let g:gista#client#default_apiname = 'GHE'

  if dein#tap('vim-gista')
    function! s:gista_on_source() abort
      let l:apinames = gista#client#get_available_apinames()
      if index(l:apinames, 'GHE') == -1
        call gista#client#register('GHE', '{{ secret_office.github_api_path }}')
      endif
    endfunction
    execute 'autocmd MyAutoCmd User' 'dein#source#' . g:dein#name
          \ 'call s:gista_on_source()'
  endif
else
  let g:gista#client#default_username = 'delphinus35'
endif

if index(['{{ secret_office.vm_hostnames | join("', '") }}'], hostname()) > -1
{{ secret_vim_setting }}
endif
