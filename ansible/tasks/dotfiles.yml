---
- file: path=~/git state=directory

- stat: path=~/git/dotfiles
  register: dotfiles

- command: git clone git@git.remora.cx:delphinus/dotfiles chdir=~/git
  when: not dotfiles.stat.exists

- name:         confirm origin repository
  shell:        git re -v | grep 'origin\s*git@git\.remora\.cx' > /dev/null chdir=~/git/dotfiles
  register:     origin_remora_cx
  changed_when: origin_remora_cx.rc.stat not in [0, 1]
  failed_when:  origin_remora_cx.rc.stat not in [0, 1]
- name:         set true origin
  shell:        git remote rm origin && git remote add origin git@git.remora.cx:delphinus/dotfiles chdir=~/git/dotfiles
  when:         origin_remora_cx.rc == 1

- name:         confirm github repository
  shell:        git re -v | grep 'github\s*git@github\.com' > /dev/null chdir=~/git/dotfiles
  register:     github_github_com
  changed_when: github_github_com.rc.stat not in [0, 1]
  failed_when:  github_github_com.rc.stat not in [0, 1]
- name:         set true github
  command:      git remote rm github && git remote add github git@github.com:delphinus35/dotfiles chdir=~/git/dotfiles
  when:         github_github_com.rc == 1

- shell: git fetch origin && git fetch github chdir=~/git/dotfiles

- command: git submodule update --init chdir=~/git/dotfiles

- file: path=~/.config state=directory
- file: src=~/git/dotfiles/{{ item }} dest=~/{{ item }} state=link force=yes
  with_items:
    - .config/ipython
    - .config/peco
    - .config/powerline
    - .editrc
    - .gitconfig
    - .inputrc
    - .jshintrc
    - .vim
    - .zshrc

- file: path='~/Library/Application Support/Karabiner' state=directory
- copy: src=files/private.xml dest='~/Library/Application Support/Karabiner/private.xml'
