---
- homebrew: name=python  state=absent # uninstall unneeded python2
  when: ansible_system == 'Darwin'
- homebrew: name=python3 state=absent # uninstall unneeded python3
  when: ansible_system == 'Darwin'
- command:  pyenv versions
  register: pyv
  changed_when: pyv.rc != 0
- command:  pyenv install {{ python2_version }}
  when:     "pyv.stdout.find(python2_version) == -1"
- command:  pyenv install {{ python3_version }}
  when:     "pyv.stdout.find(python3_version) == -1"

  # easy_install of <= 10.9 version have no '--user' option
- command:  pyenv global system
  changed_when: false
  when:     ansible_system == 'Darwin'
- command:  python -c 'import sys;import site;sys.stdout.write(site.USER_SITE)'
  register: py_user_site
  changed_when: false
- command:  python -c 'import sys;import site;sys.stdout.write(site.USER_BASE)'
  register: py_user_base
  changed_when: false
- file:     path={{ py_user_site.stdout }} state=directory
- stat:     path="{{ py_user_base.stdout }}/bin/pip"
  register: pip_st
- shell:    easy_install --install-dir {{ py_user_site.stdout }} --script-dir {{ py_user_base.stdout }}/bin pip
  when:     not pip_st.stat.exists
  register: pip_install
  changed_when: pip_install.stdout.find('Successfully installed') > -1
- shell:        "{{ py_user_base.stdout }}/bin/pip install -U --user {{ item }}"
  changed_when: false
  with_items:   python_modules
  when:         lookup('env', 'NO_PYTHON_MODULES') != '1'
- shell:        "{{ py_user_base.stdout }}/bin/pip install -U --user {{ item }}"
  changed_when: false
  with_items:   python_modules_with_compiling
  when:         lookup('env', 'NO_PYTHON_MODULES') != '1' and ansible_system == 'Darwin'

- command:  rbenv versions
  register: rbv
  failed_when: false
  changed_when: rbv.rc != 0
- command:  rbenv install {{ ruby_version }}
  when:     "rbv.stdout.find(ruby_version) == -1"
- gem: >-
    name=git-commit-autouser
    state=latest
  when: lookup('env', 'NO_GEMS') != '1'
- command: rbenv rehash

- command:  plenv versions
  register: plv
  failed_when: false
  changed_when: plv.rc != 0
- command:  plenv install {{ perl_version }}
  when:     plv.rc == 0 and plv.stdout.find(perl_version) == -1
