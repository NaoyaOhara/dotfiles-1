---
- homebrew: name=python  state=absent # uninstall unneeded python2
- homebrew: name=python3 state=absent # uninstall unneeded python3
- command:  pyenv versions
  register: pyv
  changed_when: pyv.rc != 0
- command:  pyenv install {{ python2_version }}
  when:     "pyv.stdout.find(python2_version) == -1"
- command:  pyenv install {{ python3_version }}
  when:     "pyv.stdout.find(python3_version) == -1"

  # easy_install of <= 10.9 version have no '--user' option
- command:  pyenv global system
  changed_when: false
- command:  python -c 'import sys;import site;sys.stdout.write(site.USER_SITE)'
  register: py_user_site
  changed_when: false
- command:  python -c 'import sys;import site;sys.stdout.write(site.USER_BASE)'
  register: py_user_base
  changed_when: false
- file:     path={{ py_user_site.stdout }} state=directory
- stat:     path="{{ py_user_base.stdout }}/bin/pip"
  register: pip_st
- shell:    easy_install --install-dir {{ py_user_site.stdout }} --script-dir {{ py_user_base.stdout }}/bin pip
  when:     not pip_st.stat.exists

- shell:    "{{ py_user_base.stdout }}/bin/pip install -U --user git+https://github.com/powerline/powerline"
  changed_when: false
- command:  pyenv global {{ python2_version }} {{ python3_version }}
  changed_when: false
  when:     "pyv.stdout.find('* ' + python2_version) == -1 and pyv.stdout.find('* ' + python3_version) == -1"

- command:  rbenv versions
  register: rbv
  changed_when: rbv.rc != 0
- command:  rbenv install {{ ruby_version }}
  when:     "rbv.stdout.find(ruby_version) == -1"
- command:  rbenv global {{ ruby_version }}
  when:     "rbv.stdout.find('* ' + ruby_version) == -1"
  changed_when: false

- command:  plenv versions
  register: plv
  changed_when: plv.rc != 0
- command:  plenv install {{ perl_version }}
  when:     "plv.stdout.find(perl_version) == -1"
- command:  plenv global {{ perl_version }}
  when:     "plv.stdout.find('* ' + perl_version) == -1"
  changed_when: false
