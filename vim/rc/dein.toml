# basic {{{
[[plugins]]
repo = 'Konfekt/FastFold'

[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
if = '''! (has('macunix') && has('kaoriya') && isdirectory(expand('$VIM/plugins/vimproc')))'''
hook_post_update = 'call delphinus#init#vimproc#hook_post_update()'

[[plugins]]
repo     = 'kana/vim-submode'
hook_add = '''"{{{
  call submode#enter_with('DWM_size', 'n', '', '<C-w>>', ':call DWM_GrowMaster()<CR>')
  call submode#enter_with('DWM_size', 'n', '', '<C-w><', ':call DWM_ShrinkMaster()<CR>')
  call submode#map('DWM_size', 'n', '', '>', ':call DWM_GrowMaster()<CR>')
  call submode#map('DWM_size', 'n', '', '<', ':call DWM_ShrinkMaster()<CR>')
"}}}'''

[[plugins]]
repo     = 'ryanoasis/vim-devicons'
hook_add = '''"{{{
  let g:webdevicons_enable_unite = 0
  let g:webdevicons_enable_nerdtree = 0
  let g:WebDevIconsUnicodeDecorateFolderNodesDefaultSymbol = ''
  let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols = {
        \ 'fcgi':     '',
        \ 'perl':     '',
        \ 'sqlite':   '',
        \ 'tt':       '',
        \ 'txt':      '',
        \ }
"}}}'''

[[plugins]]
repo     = 'tmux-plugins/vim-tmux-focus-events'
if       = '''exists('$TMUX') || ! has('gui_running')'''
hook_add = 'set autoread'

[[plugins]]
repo     = 'tpope/vim-fugitive'
hook_add = '''"{{{
  let g:fugitive_git_executable = expand('HOME=$H git my-alias')
  nnoremap git :<c-u>Git
  nnoremap g<space> :<c-u>Git 
  nnoremap d< :diffget //2<CR>
  nnoremap d> :diffget //3<CR>
"}}}'''

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'
# }}}

# colorscheme {{{
[[plugins]]
repo     = 'delphinus/vim-colors-solarized'
rev      = 'for-hydrozen-fork'
hook_add = 'let g:solarized_menu = 0'

[[plugins]]
repo     = 'lifepillar/vim-solarized8'
on_if    = '''has('termguicolors')'''
hook_add = '''
  let g:solarized_diffmode = 'normal'
  let g:solarized_visibility = 'normal'
  if $TERM =~# 'italic'
    let g:solarized_term_italics = 1
  endif

  nnoremap  <leader>B :<c-u>exe "colors" (g:colors_name =~# "dark"
      \ ? substitute(g:colors_name, 'dark', 'light', '')
      \ : substitute(g:colors_name, 'light', 'dark', '')
      \ )<cr>
'''
# }}}

# syntax {{{
[[plugins]]
repo = 'ChrisYip/Better-CSS-Syntax-for-Vim'

[[plugins]]
repo = 'Glench/Vim-Jinja2-Syntax'

[[plugins]]
repo = 'aklt/plantuml-syntax'

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo   = 'leafgarland/typescript-vim'
merged = 0

[[plugins]]
repo     = 'delphinus/vim-markdown'
rev      = 'merged-inline_and_code_fixes-conceal'
hook_add = '''"{{{
  augroup SetMarkdown
    autocmd!
    autocmd FileType markdown,howm_memo.markdown setlocal conceallevel=2
    autocmd FileType markdown,howm_memo.markdown hi markdownH1 cterm=bold,italic gui=bold,italic
    autocmd FileType markdown,howm_memo.markdown hi markdownH2 cterm=bold gui=bold
    autocmd FileType markdown,howm_memo.markdown hi markdownH3 cterm=italic gui=italic
  augroup END

  let g:markdown_fenced_languages = [
        \ 'coffee',
        \ 'cpp',
        \ 'css',
        \ 'diff',
        \ 'erlang',
        \ 'go',
        \ 'haskell',
        \ 'html',
        \ 'java',
        \ 'javascript',
        \ 'json',
        \ 'lua',
        \ 'ocaml',
        \ 'perl',
        \ 'plantuml',
        \ 'python',
        \ 'ruby',
        \ 'sh',
        \ 'sql',
        \ 'toml',
        \ 'typescript',
        \ 'vim',
        \ 'xml',
        \ ]
  " set conceal feature: default value '#*dlaibBces'
  let g:markdown_conceal = '*dlaibBes'
"}}}'''

[[plugins]]
repo = 'digitaltoad/vim-jade'

[[plugins]]
repo = 'kchmck/vim-coffee-script'

[[plugins]]
repo     = 'elzr/vim-json'
if       = '''! has('kaoriya')'''
hook_add = 'let g:vim_json_syntax_conceal = 0'

[[plugins]]
repo = 'motemen/xslate-vim'

[[plugins]]
repo = 'moznion/vim-cpanfile'

[[plugins]]
repo = 'othree/html5.vim'

[[plugins]]
repo = 'othree/javascript-libraries-syntax.vim'

[[plugins]]
repo = 'othree/yajs.vim'

[[plugins]]
repo = 'vim-perl/vim-perl'
# }}}

# filetype {{{
[[plugins]]
repo = 'ap/vim-css-color'

[[plugins]]
repo = 'c9s/perlomni.vim'

[[plugins]]
repo = 'delphinus/vim-rails'
rev  = 'feature/recognize-ridgepole'

[[plugins]]
repo = 'jason0x43/vim-js-indent'

[[plugins]]
repo  = 'pearofducks/ansible-vim'

[[plugins]]
repo = 'taskwarrior/task'
rtp  = 'scripts/vim'

[[plugins]]
repo  = 'ternjs/tern_for_vim'
build = 'npm install'

[[plugins]]
repo = 'tmux-plugins/vim-tmux'
# }}}

# for unite {{{
[[plugins]]
repo      = 'Shougo/unite-outline'

[[plugins]]
repo      = 'Kocha/vim-unite-tig'

[[plugins]]
repo      = 'basyura/unite-rails'

[[plugins]]
repo      = 'lambdalisue/vim-gista-unite'
hook_post_source = '''
  call unite#custom#default_action('gista', 'narrow')
'''

[[plugins]]
repo      = 'pekepeke/vim-unite-z'

[[plugins]]
repo      = 'sorah/unite-bundler'

[[plugins]]
repo      = 'tsukkee/unite-tag'

[[plugins]]
repo     = 'ujihisa/neco-look'
hook_add = '''"{{{
  let g:neocomplete#text_mode_filetypes = {
        \ 'rst': 1,
        \ 'markdown': 1,
        \ 'howm_memo': 1,
        \ 'howm_memo.markdown': 1,
        \ 'gitrebase': 1,
        \ 'gitcommit': 1,
        \ 'vcs-commit': 1,
        \ 'hybrid': 1,
        \ 'text': 1,
        \ 'help': 1,
        \ 'tex': 1,
        \ }
"}}}'''
# }}}

# for lightline {{{
[[plugins]]
repo     = 'delphinus/lightline-delphinus'
hook_add = '''
  let g:lightline_delphinus_use_powerline_glyphs = 1
  let g:lightline_delphinus_use_nerd_fonts_glyphs = 1
'''

[[plugins]]
repo    = 'itchyny/lightline.vim'
depends = [ 'lightline_delphinus', 'ale' ]

[[plugins]]
repo     = 'w0rp/ale'
hook_add = '''
  let g:ale_echo_msg_format = '%severity%: %linter%: %s'
  let g:ale_sign_column_always = 1
  let g:ale_sign_error = ' '
  let g:ale_sign_warning = ' '
  let g:ale_statusline_format = ['  %d', '  %d', '  ']
  let g:ale_linters = {
        \ 'go': [ 'gofmt', 'go vet', 'golint' ],
        \ }
'''
# }}}

# vim-script {{{
[[plugins]]
repo = 'HiColors'

[[plugins]]
repo = 'applescript.vim'

[[plugins]]
repo = 'autodate.vim'
if   = '''!has('kaoriya')'''

[[plugins]]
repo = 'ingo-library'

[[plugins]]
repo = 'nginx.vim'
# }}}

# dependencies {{{
[[plugins]]
repo = 'kana/vim-textobj-user'
# }}}

# vim:se fdm=marker:
