set encoding=utf-8
scriptencoding utf-8

let g:is_mac = has('mac')
let g:is_win = has('win32') || has('win64')

if len($H)
  let g:home = expand($H)
elseif len($USERPROFILE)
  let g:home = expand('$USERPROFILE')
else
  let g:home = expand('~')
endif

let g:vim_home = g:home . (g:is_win ? '/vimfiles' : '/.vim')
let g:source_dir = g:vim_home . '/rc'

" Note: Skip initialization for vim-tiny or vim-small.
if !1 | finish | endif

" プラグイン保存パス
let g:bundle_dir    = g:home       . '/.vim/bundle'
let g:neobundle_dir = g:bundle_dir . '/neobundle.vim'
let g:after_dir     = g:home       . '/.vim/after'

" NeoBundle へのパス
if has('vim_starting')
  execute 'set runtimepath-=' . g:home . '/.vim/'
  execute 'set runtimepath+=' . g:neobundle_dir . '/,' . g:after_dir . '/'
endif

" デフォルトプロトコル
let g:neobundle#types#git#default_protocol='https'

" Required:
call g:neobundle#begin(expand(g:bundle_dir))

let g:neobundle#default_options._ = {'verbose': 1}

" Let NeoBundle manage NeoBundle
" Required:
NeoBundleFetch 'Shougo/neobundle.vim'

let s:bundled_vimproc_directory = expand('$VIM/plugins/vimproc')
if ! (has('macunix') && has('kaoriya') && isdirectory(s:bundled_vimproc_directory))
  NeoBundle 'Shougo/vimproc.vim', {'build': {
        \   'cygwin': 'make -f make_cygwin.mak',
        \   'mac':    'make -f make_mac.mak',
        \   'unix':   'make -f make_unix.mak',
        \ }}
endif

NeoBundle 'rkitover/vimpager'

NeoBundle 'delphinus35/vim-colors-solarized'
NeoBundle 'houtsnip/vim-emacscommandline'

if has('vim_starting')
  execute 'set runtimepath+=' . g:home
endif

call g:neobundle#end()

filetype plugin indent on
syntax on

let g:mapleader='`'

colorscheme solarized
augroup SetCommentItalic
  autocmd!
  autocmd VimEnter * highlight Comment cterm=italic
augroup END

set t_ut=
set background=dark

nnoremap <C-D> 3<C-D>
nnoremap <C-U> 3<C-U>
nmap <ESC><ESC> ;nohlsearch<CR><ESC>

set t_Co=256
set termencoding=utf-8
set hlsearch
if ! (has('gui_macvim') && has('kaoriya'))
  set fileencodings=ucs-bom,utf-8,eucjp,cp932,ucs-2le,latin1,iso-2022-jp
endif
set dir=/tmp
set backupdir=/tmp
set undodir=/tmp
set ttymouse=sgr
set mouse=a
set display=uhex
set clipboard=autoselectml
set diffopt=filler,vertical,iwhite
set synmaxcol=0
set title
set titleold=bash
set titlestring=%t%(\ %M%)%(\ (%{expand(\"%:~:.:h\")})%)%(\ %a%)
set ambiwidth=single
set list                 " 空白の可視化
set listchars=tab:›\ ,trail:␣,eol:⤸,extends:»,precedes:«,nbsp:¯
set tabstop=2       " 画面上でタブ文字が占める幅
set softtabstop=2   " タブキーやバックスペースキーでカーソルが動く幅
set shiftwidth=2    " 自動インデントや <<, >> でずれる幅
set laststatus=0

"-----------------------------------------------------------------------------
" Teamplte::Toolkit 設定
au BufNewFile,BufRead *.tt2 setf tt2html
au BufNewFile,BufRead *.tt setf tt2html

"-----------------------------------------------------------------------------
" vimpager
let g:vimpager_passthrough = 1

if exists('vimpager')
  if exists('vimpager_ptree') && g:vimpager_ptree[-2] ==# 'wman'
    set ft=man
  endif
endif

" vim:ft=vim et:
