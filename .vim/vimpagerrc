scriptencoding utf-8

let g:is_mac = has('mac')
let g:is_win = has('win32') || has('win64')

if len($H)
  let g:home = expand($H)
elseif len($USERPROFILE)
  let g:home = expand('$USERPROFILE')
else
  let g:home = expand('~')
endif

let g:vim_home = g:home . '/.vim'

" シェルの位置を元に戻す
if is_win
  set shell=$SYSTEMROOT\system32\cmd.exe
endif

" NeoBundle 設定開始

" プラグイン保存パス
let g:bundle_dir = g:home . '/.vim/bundle'
let g:neobundle_dir = g:bundle_dir . '/neobundle.vim'
let g:after_dir = g:home . '/.vim/after'

" デフォルトプロトコル
let g:neobundle#types#git#default_protocol='https'

" NeoBundle へのパス
if has('vim_starting')
  set nocompatible               " Be iMproved
  execute 'set runtimepath-=' . g:home . '/.vim/'
  execute 'set runtimepath+=' . g:neobundle_dir . '/,' . g:after_dir . '/'
endif

" Required:
call neobundle#begin(expand(g:bundle_dir))

" Let NeoBundle manage NeoBundle
" Required:
NeoBundleFetch 'Shougo/neobundle.vim'

" Set vimproc
NeoBundle 'Shougo/vimproc.vim', {'build': {
      \   'cygwin': 'make -f make_cygwin.mak',
      \   'mac': 'make -f make_mac.mak',
      \   'unix': 'make -f make_unix.mak',
      \   },
      \ }

NeoBundle 'rkitover/vimpager'

NeoBundle 'airblade/vim-rooter'
NeoBundle 'delphinus35/vim-colors-solarized'
NeoBundle 'houtsnip/vim-emacscommandline'
NeoBundle 'majutsushi/tagbar'
NeoBundle 'morhetz/gruvbox'
NeoBundle 'tpope/vim-fugitive'

if has('vim_starting')
  execute 'set runtimepath+=' . g:home
endif

call neobundle#end()

filetype plugin indent on
syntax on

let mapleader='`'

colorscheme solarized
set t_ut=
set background=dark

nnoremap <C-D> 3<C-D>
nnoremap <C-U> 3<C-U>
nmap <ESC><ESC> ;nohlsearch<CR><ESC>

set t_Co=256
set encoding=utf-8
set termencoding=utf-8
set hlsearch
" ファイルエンコーディング
if ! (has('gui_macvim') && has('kaoriya'))
  set fileencodings=ucs-bom,utf-8,eucjp,cp932,ucs-2le,latin1,iso-2022-jp
endif
set dir=/tmp
set backupdir=/tmp
set undodir=/tmp
set ttymouse=sgr
set mouse=a
set display=uhex
set cursorline
set clipboard=autoselectml
set grepprg=ack
set diffopt=filler,vertical,iwhite
set synmaxcol=0
set title
set titleold=bash
set titlestring=%t%(\ %M%)%(\ (%{expand(\"%:~:.:h\")})%)%(\ %a%)
set ambiwidth=single
set list                 " 空白の可視化
set listchars=tab:▸\ ,trail:␣,eol:⤸,extends:»,precedes:«,nbsp:¯
set tabstop=2       " 画面上でタブ文字が占める幅
set softtabstop=2   " タブキーやバックスペースキーでカーソルが動く幅
set shiftwidth=2    " 自動インデントや <<, >> でずれる幅
set laststatus=0


"-----------------------------------------------------------------------------
" ヘルプ
function! s:VertHelp(word)
  exec 'vertical help ' . a:word
  exec 'vertical resize 80'
  exec 'setl wfw'
endfunction
command! -nargs=? H call s:VertHelp(<f-args>)
autocmd FileType help nnoremap <buffer>q :q<CR>

"-----------------------------------------------------------------------------
" Teamplte::Toolkit 設定
au BufNewFile,BufRead *.tt2 setf tt2html
au BufNewFile,BufRead *.tt setf tt2html

"-----------------------------------------------------------------------------
" pentadactylrc 設定
au BufNewFile,BufRead .pentadactylrc setf pentadactyl

"-----------------------------------------------------------------------------
" vimpager
let g:vimpager_passthrough = 1

if exists("vimpager")
  if exists("vimpager_ptree") && vimpager_ptree[-2] == 'wman'
    set ft=man
  endif
endif

" vim:ft=vim et:
