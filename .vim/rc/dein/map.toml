[[plugins]]
repo     = 'LeafCage/yankround.vim'
on_map   = ['<Plug>(yankround-']
hook_add = '''"{{{
  nmap p <Plug>(yankround-p)
  xmap p <Plug>(yankround-p)
  nmap P <Plug>(yankround-P)
  nmap gp <Plug>(yankround-gp)
  xmap gp <Plug>(yankround-gp)
  nmap gP <Plug>(yankround-gP)
  nmap <c-p> <Plug>(yankround-prev)
  nmap <expr><c-n> yankround#is_active() ? "\<Plug>(yankround-next)" : "\<Plug>DWMNew"
"}}}'''

[[plugins]]
repo     = 'arecarn/vim-fold-cycle'
on_map   = ['<Plug>(fold-cycle-']
hook_add = '''"{{{
  nmap <CR> <Plug>(fold-cycle-open)
  nmap <C-h> <Plug>(fold-cycle-close)
"}}}'''

[[plugins]]
repo     = 'chikatoike/concealedyank.vim'
on_map   = ['<Plug>(operator-concealedyank)']
hook_add = 'xmap Y <Plug>(operator-concealedyank)'

[[plugins]]
repo     = 'iamcco/markdown-preview.vim'
on_map   = ['<Plug>MarkdownPreview', '<Plug>StopMarkdownPreview']
hook_add = '''
  augroup MapMarkdownPreview
    autocmd!
    autocmd FileType markdown nmap <buffer> <A-m> <Plug>MarkdownPreview
    autocmd FileType markdown nmap <buffer> <A-M> <Plug>StopMarkdownPreview
  augroup END
'''
hook_source = '''
  let g:mkdp_path_to_chrome = 'open -a Safari'
'''

[[plugins]]
repo        = 'junegunn/vim-easy-align'
on_map      = ['<Plug>(EasyAlign)', '<Plug>(LiveEasyAlign)']
hook_add    = '''"{{{
  vmap <Enter>           <Plug>(EasyAlign)
  nmap <Leader>a         <Plug>(EasyAlign)
  vmap <Leader><Enter>   <Plug>(LiveEasyAlign)
  nmap <Leader><Leader>a <Plug>(LiveEasyAlign)
"}}}'''
hook_source = 'call delphinus#init#easyalign#hook_source()'

[[plugins]]
repo     = 't9md/vim-quickhl'
on_map   = ['<Plug>(quickhl-', '<Plug>(operator-quickhl-']
hook_add = '''"{{{
  nmap <Space>m <Plug>(quickhl-manual-this)
  xmap <Space>m <Plug>(quickhl-manual-this)
  nmap <Space>t <Plug>(quickhl-manual-toggle)
  xmap <Space>t <Plug>(quickhl-manual-toggle)
  nmap <Space>M <Plug>(quickhl-manual-reset)
  xmap <Space>M <Plug>(quickhl-manual-reset)
  nmap <Space>j <Plug>(quickhl-cword-toggle)
  nmap <Space>] <Plug>(quickhl-tag-toggle)
  map  <Space>H <Plug>(operator-quickhl-manual-this-motion)
"}}}'''

[[plugins]]
repo     = 't9md/vim-choosewin'
on_map   = ['<Plug>(choosewin)']
hook_add = '''
  nmap \ <Plug>(choosewin)
  let g:choosewin_statusline_replace=0
  let g:choosewin_overlay_enable=1
'''

[[plugins]]
repo        = 'easymotion/vim-easymotion'
on_map      = ['<Plug>(easymotion-']
hook_add    = '''"{{{
  map ' <Plug>(easymotion-prefix)
  nmap s <Plug>(easymotion-overwin-f2)
  xmap s <Plug>(easymotion-s2)
  omap s <Plug>(easymotion-s2)
  nmap 'f <Plug>(easymotion-fl)
  xmap 'f <Plug>(easymotion-fl)
  omap 'f <Plug>(easymotion-fl)
  nmap 'F <Plug>(easymotion-Fl)
  xmap 'F <Plug>(easymotion-Fl)
  omap 'F <Plug>(easymotion-Fl)
  map  '/ <Plug>(easymotion-sn)
  omap '/ <Plug>(easymotion-tn)
  map  'n <Plug>(easymotion-next)
  map  'N <Plug>(easymotion-prev)
  map  'L <Plug>(easymotion-bd-jk)
  nmap 'L <Plug>(easymotion-overwin-line)
"}}}'''
hook_source = 'call delphinus#init#easymotion#hook_source()'

[[plugins]]
repo    = 'vim-scripts/LineJuggler'
depends = [
  'vim-repeat',
  'ingo-library',
  'visualrepeat',
]
on_map   = ['<Plug>(LineJuggler']
hook_add = '''"{{{
  xmap [d       <Plug>(LineJugglerDupOverUp)
  nmap [d       <Plug>(LineJugglerDupOverUp)
  xmap [E       <Plug>(LineJugglerSwapUp)
  nmap [E       <Plug>(LineJugglerSwapUp)
  xmap [e       <Plug>(LineJugglerMoveUp)
  nmap [e       <Plug>(LineJugglerMoveUp)
  xmap [<Space> <Plug>(LineJugglerBlankUp)
  nmap [<Space> <Plug>(LineJugglerBlankUp)
  xmap ]d       <Plug>(LineJugglerDupOverDown)
  nmap ]d       <Plug>(LineJugglerDupOverDown)
  xmap ]E       <Plug>(LineJugglerSwapDown)
  nmap ]E       <Plug>(LineJugglerSwapDown)
  xmap ]e       <Plug>(LineJugglerMoveDown)
  nmap ]e       <Plug>(LineJugglerMoveDown)
  xmap ]<Space> <Plug>(LineJugglerBlankDown)
  nmap ]<Space> <Plug>(LineJugglerBlankDown)
"}}}'''
