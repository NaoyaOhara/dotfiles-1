# Shougowares and their dependencies {{{
[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo     = 'Shougo/context_filetype.vim'
hook_add = '''
"{{{
  let g:context_filetype#filetypes = {
        \ 'help': {},
        \ 'vue': {},
        \ }
"}}}
'''

[[plugins]]
repo = 'delphinus/vim-denite-memo'

[[plugins]]
repo = 'fishbullet/deoplete-ruby'

[[plugins]]
repo = 'rafi/vim-denite-z'

[[plugins]]
repo = 'roxma/nvim-yarp'
hook_source = '''
  " Set path for python3 for python37u packages in CentOS7
  if !executable('python3') && executable('python3.7')
    let g:python3_host_prog = exepath('python3.7')
  endif
'''

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'

[[plugins]]
repo = 'ujihisa/neco-look'

[[plugins]]
repo = 'zchee/deoplete-zsh'
# }}}

# basic {{{
[[plugins]]
repo     = 'airblade/vim-rooter'
hook_add = '''
  let g:rooter_silent_chdir = 1
'''

[[plugins]]
repo     = 'direnv/direnv.vim'
hook_add = '''
  let g:direnv_auto = 0
  augroup ExecDirenv
    autocmd!
    autocmd User RooterChDir call direnv#export()
  augroup END
'''

[[plugins]]
repo     = 'freitass/todo.txt-vim'
hook_add = '''
  let g:todo_load_python = 1
'''

[[plugins]]
repo     = 'kana/vim-submode'
hook_add = '''
"{{{
  call submode#enter_with('DWM_size', 'n', '', '<C-w>>', ':call DWM_GrowMaster()<CR>')
  call submode#enter_with('DWM_size', 'n', '', '<C-w><', ':call DWM_ShrinkMaster()<CR>')
  call submode#map('DWM_size', 'n', '', '>', ':call DWM_GrowMaster()<CR>')
  call submode#map('DWM_size', 'n', '', '<', ':call DWM_ShrinkMaster()<CR>')
"}}}
'''

[[plugins]]
repo = 'haya14busa/is.vim'

[[plugins]]
repo     = 'ryanoasis/vim-devicons'
hook_add = '''
"{{{
  let g:webdevicons_enable_nerdtree = 0
  let g:WebDevIconsUnicodeByteOrderMarkerDefaultSymbol = ''
  let g:WebDevIconsUnicodeDecorateFolderNodesDefaultSymbol = ''
  " overwrite setting for 'vue' to use U+F542 ' '
  let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols = {
        \ 'fcgi':     '',
        \ 'perl':     '',
        \ 'sqlite':   '',
        \ 'tt':       '',
        \ 'txt':      '',
        \ 'vue':      '',
        \ }
"}}}
'''

[[plugins]]
repo     = 'tpope/vim-fugitive'
hook_add = '''
"{{{
  let g:fugitive_git_executable = 'git my-alias'
  nnoremap git :<c-u>Git
  nnoremap g<space> :<c-u>Git 
  nnoremap d< :diffget //2<CR>
  nnoremap d> :diffget //3<CR>
  nnoremap gs :Gstatus<CR>
  nnoremap gc :Gbrowse<CR>
  vnoremap gc :Gbrowse<CR>
"}}}
'''

[[plugins]]
repo    = 'tpope/vim-rhubarb'
depends = ['fugitive']
# setting exists in .vimrc-local

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo     = 'wincent/terminus'
# }}}

# colorscheme {{{
[[plugins]]
repo     = 'lifepillar/vim-solarized8'
on_if    = '''has('termguicolors')'''
hook_add = '''
"{{{
  let g:solarized_diffmode = 'normal'
  let g:solarized_visibility = 'normal'
  if $TERM =~# 'italic'
    let g:solarized_term_italics = 1
  endif

  function! s:colorscheme_toggle() abort
    if &background ==# 'light'
      set background=dark
      colorscheme solarized8_dark
    else
      set background=light
      colorscheme solarized8_light
    endif
    let path = dein#get('lightline-delphinus').path
    let g:lightline_delphinus_colorscheme = 'solarized_improved'
    execute 'source' path . '/autoload/lightline/colorscheme/solarized_improved.vim'
    unlet g:loaded_lightline_delphinus
    execute 'source' path . '/plugin/lightline_delphinus.vim'

    " https://github.com/itchyny/lightline.vim/issues/241#issuecomment-322033789
    call lightline#init()
    call lightline#colorscheme()
    call lightline#update()
  endfunction

  command! ColorschemeToggle :call <SID>colorscheme_toggle()
"}}}
'''

[[plugins]]
#repo = 'arcticicestudio/nord-vim'
repo = 'delphinus/nord-vim'
hook_add = '''
  let g:nord_italic = 1
  let g:nord_italic_comments = 1
  let g:nord_underline = 1
  let g:nord_comment_brightness = 20
  let g:nord_uniform_diff_background = 1

  augroup nord-overrides
    autocmd!
    autocmd ColorScheme nord highlight Identifier guifg=#8FBCBB guibg=NONE ctermfg=14 ctermbg=NONE
    autocmd ColorScheme nord highlight Special guifg=#D08770 guibg=NONE ctermfg=11 ctermbg=NONE
    autocmd ColorScheme nord highlight IncSearch guifg=#3B4252 guibg=#81A1C1 ctermfg=0 ctermbg=4 gui=bold cterm=bold
    autocmd ColorScheme nord highlight GitGutterAdd ctermfg=2 guifg=#a3be8c ctermbg=NONE guibg=NONE
    autocmd ColorScheme nord highlight GitGutterChange ctermfg=3 guifg=#ebcb8b ctermbg=NONE guibg=NONE
    autocmd ColorScheme nord highlight GitGutterChangeDelete ctermfg=5 guifg=#b48ead ctermbg=NONE guibg=NONE
    autocmd ColorScheme nord highlight GitGutterDelete ctermfg=1 guifg=#bf616a ctermbg=NONE guibg=NONE
    "autocmd ColorScheme nord highlight GitGutterAddLine guibg=#16230b
    "autocmd ColorScheme nord highlight GitGutterChangeLine guibg=#221907
    "autocmd ColorScheme nord highlight GitGutterChangeDeleteLine guibg=#180715
    "autocmd ColorScheme nord highlight GitGutterDeleteLine guibg=#1e070a
    autocmd ColorScheme nord highlight link GitGutterAddLine GitGutterAdd
    autocmd ColorScheme nord highlight link GitGutterChangeLine GitGutterChange
    autocmd ColorScheme nord highlight link GitGutterChangeDeleteLine GitGutterChangeDelete
    autocmd ColorScheme nord highlight link GitGutterDeleteLine GitGutterDelete
  augroup END
'''
# }}}

# syntax {{{
[[plugins]]
repo = 'Glench/Vim-Jinja2-Syntax'

[[plugins]]
repo = 'HerringtonDarkholme/yats.vim'

[[plugins]]
repo = 'Vimjas/vim-python-pep8-indent'

[[plugins]]
repo = 'aklt/plantuml-syntax'

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'hail2u/vim-css3-syntax'

[[plugins]]
repo = 'isobit/vim-caddyfile'

[[plugins]]
repo = 'plasticboy/vim-markdown'
hook_add = '''
"{{{
  let g:vim_markdown_conceal = 0
  let g:vim_markdown_folding_disabled = 1
  let g:vim_markdown_new_list_item_indent = 2
"}}}
'''

[[plugins]]
repo = 'digitaltoad/vim-jade'

[[plugins]]
repo = 'isRuslan/vim-es6'

[[plugins]]
repo = 'kchmck/vim-coffee-script'

[[plugins]]
repo = 'motemen/xslate-vim'

[[plugins]]
repo = 'moznion/vim-cpanfile'

[[plugins]]
repo = 'vim-perl/vim-perl'
# }}}

# filetype {{{
[[plugins]]
repo   = 'ap/vim-css-color'
merged = 0

[[plugins]]
repo = 'c9s/perlomni.vim'

[[plugins]]
repo = 'delphinus/vim-rails'
rev  = 'feature/recognize-ridgepole'

[[plugins]]
repo = 'jason0x43/vim-js-indent'

[[plugins]]
repo     = 'pearofducks/ansible-vim'
hook_add = '''
  let g:ansible_name_highlight = 'b'
  let g:ansible_extra_keywords_highlight = 1
'''

[[plugins]]
repo     = 'posva/vim-vue'
hook_add = '''
  augroup FileTypeVueIsKeyword
    autocmd!
    autocmd FileType vue setlocal iskeyword+=$ | setlocal iskeyword+=-
  augroup END
'''

[[plugins]]
repo = 'ternjs/tern_for_vim'
hook_add = '''
"{{{
  let g:tern#command = ['tern']
  let g:tern#arguments = ['--persistent']
  augroup TernForVim
    autocmd!
    autocmd FileType javascript nnoremap <buffer> <silent> gd :TernDef<CR>
    autocmd FileType javascript nnoremap <buffer> <silent> <C-]> :TernDef<CR>
    autocmd FileType javascript nnoremap <buffer> <silent> <C-LeftMouse> :TernDef<CR>
    autocmd FileType javascript nnoremap <buffer> <silent> <C-w>] :TernDef<CR>
    autocmd FileType javascript nnoremap <buffer> <silent> <C-w><C-]> :TernDef<CR>
    autocmd FileType javascript nnoremap <buffer> <silent> K :TernType<CR>
  augroup END
"}}}
'''
hook_post_update = '''
  !npm install -g tern
'''

[[plugins]]
repo = 'tmux-plugins/vim-tmux'
# }}}

# for lightline {{{
[[plugins]]
repo    = 'delphinus/lightline-delphinus'
depends = ['lightline', 'ale', 'tagbar', 'vim-gitgutter']
hook_add = '''
  let g:lightline_delphinus_use_powerline_glyphs = 1
  let g:lightline_delphinus_use_nerd_fonts_glyphs = 1
  let g:lightline_delphinus_colorscheme = 'nord_improved'
  let g:lightline_delphinus_tagbar_enable = 1
  let g:lightline_delphinus_gitgutter_enable = 1
'''

[[plugins]]
repo    = 'itchyny/lightline.vim'

[[plugins]]
repo     = 'majutsushi/tagbar'
hook_add = '''
"{{{
  let g:tagbar_left = 1
  let g:tagbar_autoclose = 1
  let g:tagbar_autofocus = 1
  let g:tagbar_show_linenumbers = 1
  let g:tagbar_iconchars = [nr2char(0xe5ff) . ' ', nr2char(0xe5fe) . ' '] "  , 
  let g:tagbar_autopreview = 1
  autocmd BufWinEnter * if &previewwindow | setlocal nonumber norelativenumber | endif
  nmap <C-t> :<C-u>TagbarToggle<CR>
"}}}
'''

[[plugins]]
repo     = 'w0rp/ale'
hook_add = """
  let g:ale_fix_on_save = 1
  let g:ale_completion_enabled = 1
  let g:ale_echo_msg_format = '%severity%  %linter% - %s'
  "let g:ale_echo_msg_error_str = nr2char(0xf42d) . ' ' " ' '
  "let g:ale_echo_msg_warning_str = nr2char(0xf426) . ' ' " ' '
  "let g:ale_sign_error = nr2char(0xf42d) . ' ' " ' '
  "let g:ale_echo_msg_info_str = nr2char(0xf05a) . ' ' " ' '
  "let g:ale_sign_warning = nr2char(0xf426) . ' ' " ' '
  "let g:ale_statusline_format = [nr2char(0xf42d) . '  %d', nr2char(0xf426) . '  %d', nr2char(0xf4e6) . '  '] " '   '
  let g:ale_echo_msg_error_str = nr2char(0x25b8) " '▸'
  let g:ale_echo_msg_warning_str = nr2char(0x25b9) " '▹'
  let g:ale_echo_msg_info_str = nr2char(0x25b4) " '▴'
  let g:ale_sign_error =  nr2char(0x25b8) " '▸'
  let g:ale_sign_warning =  nr2char(0x25b9) " '▹'
  let g:ale_statusline_format = [nr2char(0x25b8) . ' %d', nr2char(0x25b9) . ' %d', nr2char(0x25b4) . ' '] " '▸▹▴'
  let g:ale_sign_column_always = 1
  let g:ale_fixers = {
        \ 'javascript': [ 'eslint' ],
        \ 'json': [ 'prettier' ],
        \ 'python': [ 'black' ],
        \ 'ruby': [ 'rubocop' ],
        \ 'typescript': [ 'tslint' ],
        \ }
  let g:ale_linters = {
        \ 'go': [ 'gometalinter' ],
        \ 'javascript': [ 'eslint' ],
        \ 'json': [ 'prettier' ],
        \ 'typescript': [ 'tsserver' ],
        \ 'perl': [ 'perl' ],
        \ 'vim': [ 'vint' ],
        \ }
  let g:ale_sh_shellcheck_options = '-x'
  let g:ale_go_gometalinter_options = '--fast -E lll -E dupl -E gofmt -E goimports -E misspell'
  let g:ale_python_pylint_change_directory = 0
  nmap <silent> Ë <Plug>(ale_previous_wrap)
  nmap <silent> Ê <Plug>(ale_next_wrap)
  nmap <silent>  <Plug>(ale_previous_wrap)
  nmap <silent> Ô <Plug>(ale_next_wrap)
  nmap <silent> <A-K> <Plug>(ale_previous_wrap)
  nmap <silent> <A-J> <Plug>(ale_next_wrap)
  augroup DisableALEInDiffBuffers
    autocmd!
    autocmd VimEnter,FilterWritePre * ALEDisableBuffer
  augroup END
  augroup DisableALEInDtsFiles
    autocmd!
    autocmd BufRead,BufNewFile *.d.ts ALEDisableBuffer
    autocmd BufRead,BufNewFile *.d.ts.map ALEDisableBuffer
  augroup END
"""
hook_post_update = '''
  !pip3 install -U --user black vint
  !npm install -g eslint tslint prettier
  !gem install --user-install rubocop
'''
# }}}

# vim-script {{{
[[plugins]]
repo = 'vim-scripts/HiColors'

[[plugins]]
repo = 'vim-scripts/applescript.vim'

[[plugins]]
repo = 'vim-scripts/autodate.vim'
if   = '''!has('kaoriya')'''

[[plugins]]
repo = 'vim-scripts/fontforge_script.vim'

[[plugins]]
repo = 'vim-scripts/nginx.vim'
# }}}

# dependencies {{{
[[plugins]]
repo = 'inkarkat/vim-ingo-library'

[[plugins]]
repo = 'kana/vim-textobj-user'
# }}}

# vim:se fdm=marker:
