[ftplugin] #{{{
applescript = ''' "{{{
  inoremap <buffer> <A-m> ￢<CR>
  inoremap <buffer> µ ￢<CR>
"}}} '''

c = ''' "{{{
  setlocal tabstop=8
  setlocal shiftwidth=8
  setlocal softtabstop=8
  setlocal noexpandtab
"}}} '''

css = 'setlocal iskeyword+=-'

go_gohtmltmpl = ''' "{{{
  set tabstop=4
  set shiftwidth=4
  set softtabstop=4
"}}} '''

help = 'setlocal nolist nonumber norelativenumber'

html_javascript = ''' "{{{
  setlocal tabstop=2
  setlocal shiftwidth=2
  setlocal softtabstop=2
"}}} '''

json = ''' "{{{
  setlocal tabstop=4
  setlocal shiftwidth=4
  setlocal softtabstop=4
  setlocal nocursorcolumn
"}}} '''

perl = ''' "{{{
  let g:perl_include_pod = 1
  unlet! g:perl_no_scope_in_variables
  unlet! g:perl_no_extended_vars
  let g:perl_string_as_statement = 1
  unlet! g:perl_no_sync_on_sub
  unlet! g:perl_no_sync_on_global_var
  let g:perl_sync_dist = 1000
  let g:perl_fold = 1
  unlet! g:perl_fold_blocks
  let g:perl_nofold_packages = 1
  unlet! g:perl_nofold_subs
  let g:perl_fold_anonymous_subs = 1
  let g:perl_sub_signatures = 1

  set iskeyword-=-
  set iskeyword-=:

  setlocal tabstop=4
  setlocal shiftwidth=4
  setlocal softtabstop=4

  call delphinus#perl#manage_local_perl(expand('%'))
"}}} '''

php = 'setlocal expandtab'

python = ''' "{{{
  setlocal tabstop=4
  setlocal softtabstop=4
  setlocal shiftwidth=4

  call delphinus#ale#set_pylintrc()
"}}} '''

ruby = ''' "{{{
  setlocal tabstop=2
  setlocal shiftwidth=2
  setlocal softtabstop=2

  function! s:rspec_syntax_highlight()
    hi def link rubyRailsTestMethod Function
    syn keyword rubyRailsTestMethod describe context it its specify shared_context shared_examples shared_examples_for shared_context include_examples include_context it_should_behave_like it_behaves_like before after around subject fixtures controller_name helper_name scenario feature background given described_class
    syn match rubyRailsTestMethod '\<let\>!\='
    syn keyword rubyRailsTestMethod violated pending expect expect_any_instance_of allow allow_any_instance_of double instance_double mock mock_model stub_model xit
    syn match rubyRailsTestMethod '\.\@<!\<stub\>!\@!'
  endfunction

  autocmd Syntax ruby if ! RailsDetect() | call s:rspec_syntax_highlight() | endif
"}}} '''

scss = 'setlocal iskeyword+=-'

toml = 'setlocal foldmethod=marker'

vim = ''' "{{{
  setlocal expandtab
  setlocal shiftwidth=2
  setlocal softtabstop=2
  setlocal tabstop=2
"}}} '''
#}}}

# Shougowares and their dependencies {{{
[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'delphinus/vim-denite-memo'

[[plugins]]
repo = 'fishbullet/deoplete-ruby'

[[plugins]]
repo = 'rafi/vim-denite-z'

[[plugins]]
repo = 'roxma/nvim-yarp'
hook_add = '''
  " Set path for python3 for python37u packages in CentOS7
  if !executable('python3') && executable('python3.7')
    let g:python3_host_prog = exepath('python3.7')
  endif
'''

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'

[[plugins]]
repo = 'ujihisa/neco-look'

[[plugins]]
repo = 'zchee/deoplete-zsh'
# }}}

# basic {{{
[[plugins]]
repo     = 'airblade/vim-rooter'
hook_add = '''
  let g:rooter_silent_chdir = 1
'''

[[plugins]]
repo     = 'direnv/direnv.vim'
hook_add = '''
  let g:direnv_auto = 0
  augroup ExecDirenv
    autocmd!
    autocmd User RooterChDir call direnv#export()
  augroup END
'''

[[plugins]]
repo     = 'freitass/todo.txt-vim'
hook_add = '''
  let g:todo_load_python = 1
'''

[[plugins]]
repo     = 'kana/vim-submode'
hook_add = ''' "{{{
  call submode#enter_with('DWM_size', 'n', '', '<C-w>>', ':call DWM_GrowMaster()<CR>')
  call submode#enter_with('DWM_size', 'n', '', '<C-w><', ':call DWM_ShrinkMaster()<CR>')
  call submode#map('DWM_size', 'n', '', '>', ':call DWM_GrowMaster()<CR>')
  call submode#map('DWM_size', 'n', '', '<', ':call DWM_ShrinkMaster()<CR>')
"}}} '''

[[plugins]]
repo = 'haya14busa/is.vim'

[[plugins]]
repo = 'ncm2/float-preview.nvim'

[[plugins]]
repo     = 'ryanoasis/vim-devicons'
hook_add = ''' "{{{
  " U+E287 =>  :
  " U+E601 =>  :
  " U+E60E =>  :
  " U+E769 =>  :
  " U+E7C4 =>  :
  " U+F07B =>  :
  " U+F542 =>  :
  let g:webdevicons_enable_nerdtree = 0
  let g:WebDevIconsUnicodeByteOrderMarkerDefaultSymbol = nr2char(0xe287)
  let g:WebDevIconsUnicodeDecorateFolderNodesDefaultSymbol = nr2char(0xf07b)
  " overwrite setting for 'vue' to use U+F542
  let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols = {
        \ 'fcgi':     nr2char(0xe769),
        \ 'perl':     nr2char(0xe769),
        \ 'sqlite':   nr2char(0xe7c4),
        \ 'tt':       nr2char(0xe60e),
        \ 'txt':      nr2char(0xe601),
        \ 'vue':      nr2char(0xf542),
        \ }
"}}} '''

[[plugins]]
repo     = 'tpope/vim-fugitive'
hook_add = ''' "{{{
  nnoremap git :<c-u>Git
  nnoremap g<space> :<c-u>Git 
  nnoremap d< :diffget //2<CR>
  nnoremap d> :diffget //3<CR>
  nnoremap gs :Gstatus<CR>
  nnoremap gc :Gbrowse<CR>
  vnoremap gc :Gbrowse<CR>
"}}} '''

[[plugins]]
repo    = 'tpope/vim-rhubarb'
depends = ['fugitive']
# setting exists in .vimrc-local

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo     = 'wincent/terminus'
# }}}

# colorscheme {{{
[[plugins]]
#repo     = 'lifepillar/vim-solarized8'
repo     = 'delphinus/vim-solarized8'
rev      = 'feature/custom'
hook_add = ''' "{{{
  let g:solarized_diffmode = 'normal'
  let g:solarized_enable_extra_hi_groups = 1
  let g:solarized_visibility = 'normal'
  let g:solarized_term_italics = 1
"}}} '''

[[plugins]]
#repo = 'arcticicestudio/nord-vim'
repo = 'delphinus/nord-vim'
rev  = 'feature/custom'
hook_add = '''
  let g:nord_italic = 1
  let g:nord_italic_comments = 1
  let g:nord_underline = 1
  let g:nord_uniform_diff_background = 1
  let g:nord_cursor_line_number_background = 1
"}}} '''

# syntax {{{
[[plugins]]
repo = 'Glench/Vim-Jinja2-Syntax'

[[plugins]]
repo = 'HerringtonDarkholme/yats.vim'

[[plugins]]
repo = 'Vimjas/vim-python-pep8-indent'

[[plugins]]
repo = 'aklt/plantuml-syntax'

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'delphinus/vim-toml-dein'

[[plugins]]
repo = 'hail2u/vim-css3-syntax'

[[plugins]]
repo = 'isobit/vim-caddyfile'

[[plugins]]
repo = 'plasticboy/vim-markdown'
hook_add = ''' "{{{
  let g:vim_markdown_conceal = 0
  let g:vim_markdown_folding_disabled = 1
  let g:vim_markdown_new_list_item_indent = 2
"}}} '''

[[plugins]]
repo = 'digitaltoad/vim-jade'

[[plugins]]
repo = 'isRuslan/vim-es6'

[[plugins]]
repo = 'kchmck/vim-coffee-script'

[[plugins]]
repo = 'motemen/xslate-vim'

[[plugins]]
repo = 'moznion/vim-cpanfile'

[[plugins]]
repo = 'vim-perl/vim-perl'
# }}}

# filetype {{{
[[plugins]]
repo   = 'ap/vim-css-color'
merged = 0

[[plugins]]
repo = 'c9s/perlomni.vim'

[[plugins]]
repo = 'delphinus/vim-rails'
rev  = 'feature/recognize-ridgepole'

[[plugins]]
repo = 'delphinus/vim-firestore'

[[plugins]]
repo = 'kchmck/vim-coffee-script'
hook_add = '''
  augroup DetectCSON
    autocmd!
    autocmd BufNewFile,BufRead *.cson set filetype=coffee
  augroup END
'''

[[plugins]]
repo = 'jason0x43/vim-js-indent'

[[plugins]]
repo = 'pangloss/vim-javascript'

[[plugins]]
repo     = 'pearofducks/ansible-vim'
hook_add = '''
  let g:ansible_name_highlight = 'b'
  let g:ansible_extra_keywords_highlight = 1
'''

[[plugins]]
repo     = 'posva/vim-vue'
hook_add = '''
  augroup FileTypeVueIsKeyword
    autocmd!
    autocmd FileType vue setlocal iskeyword+=$ | setlocal iskeyword+=-
  augroup END
'''

[[plugins]]
repo = 'ternjs/tern_for_vim'
hook_add = ''' "{{{
  let g:tern#command = ['tern']
  let g:tern#arguments = ['--persistent']
  augroup TernForVim
    autocmd!
    autocmd FileType javascript nnoremap <buffer> <silent> gd :TernDef<CR>
    autocmd FileType javascript nnoremap <buffer> <silent> <C-]> :TernDef<CR>
    autocmd FileType javascript nnoremap <buffer> <silent> <C-LeftMouse> :TernDef<CR>
    autocmd FileType javascript nnoremap <buffer> <silent> <C-w>] :TernDef<CR>
    autocmd FileType javascript nnoremap <buffer> <silent> <C-w><C-]> :TernDef<CR>
    autocmd FileType javascript nnoremap <buffer> <silent> K :TernType<CR>
  augroup END
"}}} '''
hook_post_update = '''
  !npm install -g tern
'''

[[plugins]]
repo = 'tmux-plugins/vim-tmux'
# }}}

# vim-script {{{
[[plugins]]
repo = 'vim-scripts/HiColors'

[[plugins]]
repo = 'vim-scripts/applescript.vim'

[[plugins]]
repo = 'vim-scripts/autodate.vim'
if   = '''!has('kaoriya')'''

[[plugins]]
repo = 'vim-scripts/fontforge_script.vim'

[[plugins]]
repo = 'vim-scripts/nginx.vim'
# }}}

# dependencies {{{
[[plugins]]
repo = 'inkarkat/vim-ingo-library'

[[plugins]]
repo = 'kana/vim-textobj-user'
# }}}

# vim:se fdm=marker:
