[[plugins]]
repo        = 'Shougo/deoplete.nvim'
on_event    = ['InsertEnter']
depends     = ['nvim-yarp', 'vim-hug-neovim-rpc']
hook_source = ''' "{{{
  let g:deoplete#enable_at_startup = 1
  inoremap <silent> <expr> <TAB>
        \ pumvisible() ? "\<C-n>" :
        \ <SID>check_back_space() ? "\<TAB>" :
        \ deoplete#manual_complete()
  inoremap <silent> <expr> <S-TAB>
        \ pumvisible() ? "\<C-p>" :
        \ <SID>check_back_space() ? "\<S-TAB>" :
        \ deoplete#manual_complete()
  function! s:check_back_space() abort
    let col = col('.') - 1
    return !col || getline('.')[col - 1] =~# '\s'
  endfunction
"}}} '''
hook_post_source = ''' "{{{
  call deoplete#custom#source('_', 'converters', [
        \ 'converter_auto_paren',
        \ 'converter_remove_overlap',
        \ 'converter_truncate_abbr',
        \ 'converter_truncate_menu',
        \ ])
  call deoplete#custom#source('ale', #{
        \ dup: v:true,
        \ max_menu_width: 40,
        \ rank: 400
        \ })
  call deoplete#custom#source('look', 'rank', 0)
  call deoplete#custom#source('denite', 'rank', 300)
  call deoplete#custom#option(#{
        \ camel_case: v:true,
        \ candidate_marks: ['⌥Z', '⌥X', '⌥C', '⌥V', '⌥B'],
        \ ignore_sources: #{
        \   AerojumpFilter: ['look'],
        \   denite-filter: ['look'],
        \   perl: ['ale'],
        \ },
        \ keyword_patterns: #{
        \   _: '\w\k*',
        \   denite-filter: '[\w.-]*',
        \ },
        \ min_pattern_length: 1,
        \ })
  call deoplete#custom#var('terminal', 'require_same_tab', v:false)
  function! s:my_cr_function() abort
    return deoplete#close_popup() . "\<CR>"
  endfunction
  inoremap <silent> <CR> <C-r>=<SID>my_cr_function()<CR>
  inoremap <expr><silent> <C-f> pumvisible() ? deoplete#close_popup() : "\<C-f>"
  " Map ⌥ 1〜⌥ 5 for candidate marks
  inoremap <expr> <A-z> pumvisible() ? deoplete#insert_candidate(0) : "\<A-z>"
  inoremap <expr> <A-x> pumvisible() ? deoplete#insert_candidate(1) : "\<A-x>"
  inoremap <expr> <A-c> pumvisible() ? deoplete#insert_candidate(2) : "\<A-c>"
  inoremap <expr> <A-v> pumvisible() ? deoplete#insert_candidate(3) : "\<A-v>"
  inoremap <expr> <A-b> pumvisible() ? deoplete#insert_candidate(4) : "\<A-b>"
  call deoplete#initialize()
"}}} '''
#hook_post_update = '!pip3 install -U --user neovim'

[[plugins]]
repo      = 'Shougo/deoplete-lsp'
on_source = ['deoplete.nvim']
if        = 'has("nvim-0.5")'

[[plugins]]
repo      = 'Shougo/deoplete-terminal'
on_source = ['deoplete.nvim']

[[plugins]]
repo      = 'Shougo/echodoc.vim'
on_source = ['deoplete.nvim']
hook_source = ''' "{{{
  let g:echodoc#enable_at_startup = 1
  let g:echodoc#type = 'floating'
"}}} '''

[[plugins]]
repo      = 'Shougo/neoinclude.vim'
on_source = ['deoplete.nvim']

[[plugins]]
repo      = 'Shougo/neopairs.vim'
on_source = ['deoplete.nvim']

[[plugins]]
repo      = 'Shougo/neco-syntax'
on_source = ['deoplete.nvim']

[[plugins]]
repo  = 'Shougo/neco-vim'
on_ft = ['vim']

[[plugins]]
repo    = 'carlitux/deoplete-ternjs'
on_ft   = ['javascript']
hook_post_update = '''
  !npm install -g tern
'''
hook_source = '''
  let g:deoplete#sources#ternjs#types = 1
  let g:deoplete#sources#ternjs#depths = 1
  let g:deoplete#sources#ternjs#docs = 1
'''

[[plugins]]
repo      = 'ncm2/float-preview.nvim'
if        = 'has("nvim")'
on_source = ['deoplete.nvim']
hook_add = ''' "{{{
  let g:float_preview#docked = 0
  let g:float_preview#winhl = 'Normal:FloatPreview,NonText:FloatPreviewTransparent,EndOfBuffer:FloatPreviewTransparent'
  function! s:float_preview_win_open() abort
    call nvim_win_set_option(g:float_preview#win, 'colorcolumn', '')
    call nvim_win_set_option(g:float_preview#win, 'list', v:false)
    call nvim_win_set_option(g:float_preview#win, 'winblend', 30)
  endfunction
  autocmd User FloatPreviewWinOpen call s:float_preview_win_open()
"}}} '''

[[plugins]]
repo      = 'wellle/tmux-complete.vim'
on_source = ['deoplete.nvim']
hook_add  = 'let g:tmuxcomplete#trigger = ""'
