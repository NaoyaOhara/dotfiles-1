# Shougoware {{{
[[plugins]]
repo        = 'Shougo/echodoc.vim'
hook_source = 'let g:echodoc_enable_at_startup = 1'

[[plugins]]
repo      = 'Shougo/neoinclude.vim'
depends   = ['neoinclude.vim']
on_source = ['unite.vim']

[[plugins]]
repo        = 'Shougo/neocomplete.vim'
depends     = 'echodoc.vim'
on_i        = 1
hook_add    = 'call delphinus#init#neocomplete#hook_add()'
hook_source = 'call delphinus#init#neocomplete#hook_source()'

[[plugins]]
repo      = 'Shougo/neomru.vim'
on_source = ['unite.vim']

[[plugins]]
repo      = 'Shougo/tabpagebuffer.vim'
on_source = ['unite.vim', 'vimfiler', 'vimshell']

[[plugins]]
repo        = 'Shougo/unite.vim'
hook_add    = 'call delphinus#init#unite#hook_add()'
hook_source = 'call delphinus#init#unite#hook_source()'

[[plugins]]
repo    = 'Shougo/vimfiler'
depends = ['unite.vim']
on_path = '.*'
on_cmd  = [
  'VimFiler',
  'VimFilerExplorer',
  'Edit',
  'Read',
  'Source',
  'Write',
]
hook_add         = 'nnoremap `f :VimFilerBufferDir<CR>'
hook_source      = 'call delphinus#init#vimfiler#hook_source()'
hook_post_source = 'call delphinus#init#vimfiler#hook_post_source()'

[[plugins]]
repo   = 'Shougo/vimshell'
on_cmd = [
  'VimShell',
  'VimShellExecute',
  'VimShellInteractive',
  'VimShellTerminal',
  'VimShellPop',
]
hook_add = '''
  nnoremap `vv :<C-U>VimShell<CR>
  nnoremap `vc :<C-U>VimShellCreate<CR>
'''
hook_source = 'call delphinus#init#vimshell#hook_source()'

[[plugins]]
repo   = 'Shougo/vinarise.vim'
on_cmd = ['Vinarise']
# }}}

# for unite {{{
[[plugins]]
repo      = 'delphinus35/unite-ghq'
on_source = ['unite.vim']
hook_source = '''
  if exists('$H')
    let g:unite_ghq_executable = 'ghq.sh'
  endif
'''

[[plugins]]
repo        = 'fuenor/qfixhowm'
on_map      = ['g,m', 'g,c', 'g,s', 'g,q']
on_source   = ['unite.vim']
hook_source = 'call delphinus#init#qfixhowm#hook_source()'

[[plugins]]
repo      = 'kannokanno/unite-dwm'
on_source = ['unite.vim']

[[plugins]]
repo      = 'osyo-manga/unite-qfixhowm'
depends   = ['qfixhowm']
on_source = ['unite.vim']

[[plugins]]
repo      = 'spolu/dwm.vim'
on_map    = ['<Plug>DWM']
on_source = ['unite.vim']
hook_add  = 'call delphinus#init#dwm#hook_add()'

[[plugins]]
repo        = 'thinca/vim-ref'
on_cmd      = ['Ref']
on_source   = ['unite.vim']
hook_add    = 'call delphinus#init#ref#hook_add()'
hook_source = 'call delphinus#init#ref#hook_source()'
# }}}

# on_cmd {{{
[[plugins]]
repo     = 'airblade/vim-rooter'
on_cmd   = ['Rooter']
hook_add = '''
  let g:rooter_use_lcd = 1
  let g:rooter_silent_chdir = 1
  autocmd BufEnter * Rooter
'''

[[plugins]]
repo     = 'dhruvasagar/vim-table-mode'
on_cmd   = ['tablemode']
hook_add = '''
  nnoremap `tm :call tablemode#Toggle()<CR>
  let g:table_mode_corner='|'
'''

[[plugins]]
repo   = 'fuenor/JpFormat.vim'
on_cmd = ['JpFormatAll', 'JpJoinAll']
on_ft  = ['howm_memo']

[[plugins]]
repo   = 'gregsexton/VimCalc'
on_cmd = ['Calc']

[[plugins]]
repo   = 'kannokanno/previm'
on_cmd = ['PrevimOpen']

[[plugins]]
repo    = 'lambdalisue/vim-gista'
on_cmd  = ['Gista']
on_func = ['gista#']

[[plugins]]
repo   = 'rizzatti/dash.vim'
on_cmd = ['Dash']
gui    = 1

[[plugins]]
repo        = 'sgur/vim-lazygutter'
on_cmd      = ['GitGutterToggle']
hook_source = 'call delphinus#init#lazygutter#hook_source()'

[[plugins]]
repo   = 'sjl/gundo.vim'
on_cmd = ['GundoToggle']

[[plugins]]
repo        = 'thinca/vim-fontzoom'
on_cmd      = ['Fontzoom']
on_map      = ['<Plug>(fontzoom-']
gui         = 1
hook_add    = 'call delphinus#init#fontzoom#hook_add()'
hook_source = 'call delphinus#init#fontzoom#hook_source()'

[[plugins]]
repo      = 'thinca/vim-prettyprint'
on_cmd    = ['PP', 'PrettyPrint']
on_source = ['capture.vim']

[[plugins]]
repo   = 'tyru/capture.vim'
on_cmd = ['Capture']

[[plugins]]
repo     = 'tyru/open-browser.vim'
on_cmd   = ['OpenBrowser', 'OpenBrowserSearch']
on_map   = ['<Plug>(openbrowser-']
hook_add = '''
  nmap g<CR> <Plug>(openbrowser-smart-search)
  vmap g<CR> <Plug>(openbrowser-smart-search)
'''

[[plugins]]
repo   = 'AnsiEsc.vim'
on_cmd = ['AnsiEsc']
# }}}

# on_ft {{{
[[plugins]]
repo        = 'Quramy/tsuquyomi'
on_ft       = ['typescript']
hook_source = 'call delphinus#init#tsuquyomi#hook_source()'

[[plugins]]
repo  = 'catalinciurea/perl-nextmethod'
on_ft = ['perl']

[[plugins]]
repo             = 'csv.vim'
on_ft            = ['csv']
hook_post_source = 'call delphinus#init#csv#hook_post_source()'

[[plugins]]
repo    = 'delphinus35/neocomplete-json-schema'
depends = ['neocomplete.vim']
on_ft   = ['json']
on_i    = 1

[[plugins]]
repo  = 'dsawardekar/wordpress.vim'
on_ft = ['php']

[[plugins]]
repo  = 'fatih/vim-go'
on_ft = ['go']

[[plugins]]
repo  = 'msanders/cocoa.vim'
on_ft = ['objc']

[[plugins]]
repo    = 'rhysd/vim-textobj-ruby'
depends = ['vim-textobj-user']
on_ft   = ['ruby']

[[plugins]]
repo = 'tpope/vim-endwise'
on_ft = [
    'lua', 'elixir', 'ruby', 'crystal', 'sh', 'zsh', 'vb', 'vbnet',
    'aspvbs', 'vim', 'c', 'cpp', 'xdefaults', 'objc', 'matlab',
  ]
# }}}

# on_map {{{
[[plugins]]
repo     = 'LeafCage/yankround.vim'
on_map   = ['<Plug>(yankround-']
hook_add = 'call delphinus#init#yankround#hook_add()'

[[plugins]]
repo     = 'chikatoike/concealedyank.vim'
on_map   = ['<Plug>(operator-concealedyank)']
hook_add = 'xmap Y <Plug>(operator-concealedyank)'

[[plugins]]
repo     = 'delphinus35/vim-lycia'
on_map   = ['<Plug>(lycia']
hook_add = 'call delphinus#init#lycia#hook_add()'

[[plugins]]
repo        = 'junegunn/vim-easy-align'
on_map      = ['<Plug>(EasyAlign)', '<Plug>(LiveEasyAlign)']
hook_add    = 'call delphinus#init#easyalign#hook_add()'
hook_source = 'call delphinus#init#easyalign#hook_source()'

[[plugins]]
repo     = 't9md/vim-quickhl'
on_map   = ['<Plug>(quickhl-', '<Plug>(operator-quickhl-']
hook_add = 'call delphinus#init#quickhl#hook_add()'

[[plugins]]
repo     = 't9md/vim-choosewin'
on_map   = ['<Plug>(choosewin)']
hook_add = '''
  nmap \ <Plug>(choosewin)
  let g:choosewin_statusline_replace=0
  let g:choosewin_overlay_enable=1
'''

[[plugins]]
repo        = 'easymotion/vim-easymotion'
on_map      = ['<Plug>(easymotion-']
hook_add    = 'call delphinus#init#easymotion#hook_add()'
hook_source = 'call delphinus#init#easymotion#hook_source()'

[[plugins]]
repo    = 'LineJuggler'
depends = [
  'vim-repeat',
  'ingo-library',
  'visualrepeat',
]
on_map   = ['<Plug>(LineJuggler']
hook_add = 'call delphinus#init#linejuggler#hook_add()'
# }}}

# on_idle {{{
[[plugins]]
repo    = 'delphinus35/vim-emacscommandline'
on_idle = 1

[[plugins]]
repo    = 'delphinus35/vim-unimpaired'
on_idle = 1

[[plugins]]
repo    = 'itchyny/vim-cursorword'
on_idle = 1

[[plugins]]
repo             = 'itchyny/vim-parenmatch'
on_idle          = 1
hook_post_source = 'call parenmatch#highlight()'

[[plugins]]
repo    = 'thinca/vim-visualstar'
on_idle = 1
# }}}

# watchdogs {{{
[[plugins]]
repo    = 'osyo-manga/vim-watchdogs'
depends = [
  'vim-hier',
  'quickfixstatus',
  'shabadou.vim',
  'vim-quickrun',
]
on_idle          = 1
hook_add         = 'call delphinus#init#watchdogs#hook_add()'
hook_post_source = 'call delphinus#init#watchdogs#hook_post_source()'

[[plugins]]
repo = 'cohama/vim-hier'

[[plugins]]
repo     = 'thinca/vim-quickrun'
on_cmd   = ['QuickRun']
hook_add = 'call delphinus#init#quickrun#hook_add()'

[[plugins]]
repo = 'dannyob/quickfixstatus'
# }}}

# others {{{
[[plugins]]
repo    = 'haya14busa/incsearch.vim'
depends = [
    'vim-easymotion'
    'incsearch-easymotion.vim'
    'incsearch-fuzzy.vim'
  ]
on_func  = ['incsearch#']
hook_add = 'noremap <silent><expr> <Space>/ incsearch#go(delphinus#incsearch#config_easyfuzzymotion())'

[[plugins]]
repo = 'haya14busa/incsearch-easymotion.vim'

[[plugins]]
repo = 'haya14busa/incsearch-fuzzy.vim'

[[plugins]]
repo = 'vim-jp/vital.vim'
on_func = ['vital']

[[plugins]]
repo = 'visualrepeat'
# }}}

# vim:se fdm=marker:
