scriptencoding 'utf-8'

" メニューを読み込まない
set guioptions+=M

let g:is_remora_cx = hostname() == 'remora'
let g:is_remora = hostname() =~ '^remora'
let g:is_remora_air2 = hostname() =~ '^remora-air2'
let g:is_backup = hostname() =~ 'backup\d\?.remora.cx'
let g:is_office = hostname() !~ 'remora' && len($H) > 0 && has('unix')
let g:is_office_win = len($USERDOMAIN) && has('win32')
let g:is_office_cygwin = len($USERDOMAIN) && has('win32unix')
let g:is_office_alt = is_office && $VIM_ENV_ALT
let g:is_xerxes = hostname() == 'xerxes' && has('win32')
let g:is_xerxes_cygwin = hostname() == 'xerxes' && has('win32unix')
let g:is_remora_air2_win = hostname() == 'remora-air2-win'
let g:is_unix = is_remora || is_backup || is_office || is_office_cygwin
let g:is_win = has('win32') || has('win64')

if is_remora || is_office_cygwin || is_backup
    let g:home = expand('~')
elseif is_office
    let g:home = expand('$H')
elseif is_win
    let g:home = expand('$HOME')
else
    finish
endif

let g:vim_home = g:home . (g:is_win ? '/vimfiles' : '/.vim')
let g:source_dir = g:vim_home . '/rc'

function s:loadrc(file)
	execute 'source ' . g:source_dir . '/' . a:file . '.vim'
endfunction

call s:loadrc('neobundle')          " プラグインの読み込み
call s:loadrc('map')                " マッピング
call s:loadrc('set')                " オプション設定
call s:loadrc('term')               " ターミナル固有の設定
call s:loadrc('functions')          " ユーティリティ関数

call s:loadrc('qfixmemo')           " QFixMemo 設定
call s:loadrc('quickrun')           " QuickRun 設定
call s:loadrc('perl')               " Perl 設定
call s:loadrc('ref')                " Ref 設定
call s:loadrc('netrw')              " Netrw 設定
call s:loadrc('unite')              " Unite 設定
call s:loadrc('vimfiler')           " VimFiler 設定
call s:loadrc('vimshell')           " VimShell 設定
call s:loadrc('powerline')          " Powerline 設定
call s:loadrc('jpformat')           " JpFormat 設定
call s:loadrc('tweetvim')           " TweetVim 設定
call s:loadrc('jsl')                " jsl 設定
call s:loadrc('chalice')            " Chalice 設定
call s:loadrc('easymotion')         " EasyMotion 設定
call s:loadrc('cmdline-completion') " cmdline-completion 設定
call s:loadrc('csv')                " CSV 設定
call s:loadrc('rooter')             " vim-rooter 設定
call s:loadrc('title')              " screen title 設定
call s:loadrc('fugitive')           " fugitive 設定
call s:loadrc('colorizer')          " Colorizer 設定
call s:loadrc('watchdogs')          " watchdogs 設定
call s:loadrc('dwm')                " dwm.vim 設定
call s:loadrc('javascript')         " javascript 設定
call s:loadrc('easyalign')          " EasyAlign 設定
call s:loadrc('gitgutter')          " gitgutter 設定
call s:loadrc('verticalhelp')       " VerticalHelp 設定
call s:loadrc('pb')                 " pb.vim 設定
call s:loadrc('neocomplcache')      " neocomplcache 設定
call s:loadrc('anzu')               " anzu 設定
call s:loadrc('yankstack')          " yankstack 設定

" オフィス専用設定
let g:office_vimrc = g:home . '/git/dotfiles-office/.vimrc'
if is_office && filereadable(g:office_vimrc)
	execute 'source ' . g:office_vimrc
endif
